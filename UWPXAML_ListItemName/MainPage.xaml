<Page
    x:Class="UWPXAML_ListItemName.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UWPXAML_ListItemName"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Grid>
        <StackPanel Margin="20">
            <TextBlock Name="BirdsListLabel" x:Uid="BirdsListLabel" Margin="0 0 0 4" />
            <!-- Have the list's accessible name set from the nearby label. -->
            <local:BirdListBox x:Name="BirdList" 
                AutomationProperties.LabeledBy="{Binding ElementName=BirdsListLabel}"
                KeyDown="BirdList_KeyDown">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <!-- Have the accessible names of the list items here set from the leading and most 
                            important text string contained in the item. This helps customers using screen 
                            readers to efficiently learn when they've navigated to an item of interest. Once 
                            at that item they can use screen reader commands to navigate into the item and 
                            reach all text contained in the item. -->
                        
                        <!-- By setting the AutomationProperties.Name on the DataTemplate's Grid, that string will
                            get repurposed as the accessible name of the list item itself. A side effect of that 
                            is that the Grid becomes exposed as a unique element through the Control view of the 
                            UI Automation (UIA) tree. Given that in this case that's not helpful to customers, 
                            take explicit action to have the element not exposed through the Control view. -->

                        <!-- At the time of writing this, it seems that attempts to bind 
                            AutomationProperties.HelpText here don't work. -->
                        <Grid Margin="0,2"
                            AutomationProperties.Name="{Binding Name}"
                            AutomationProperties.AccessibilityView="Raw">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding Name}" Margin="0 0 20 0"/>
                            <TextBlock Grid.Column="1" Text="{Binding Habitat}" />
                            <TextBlock Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding Voice}" />
                            <Button x:Uid="BirdItemDeleteButton" 
                                Grid.Column="2" Grid.RowSpan="2" 
                                Content="X" Margin="8 0 0 0" 
                                Click="DeleteBirdItemButton_Click" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </local:BirdListBox>
            <Button x:Uid="CloseButton" AccessKey="C" Margin="0 20 0 0"
                Click="CloseButton_Click" />
        </StackPanel>
    </Grid>
</Page>
